name: Bookstore WebApp CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clean Install Dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli@19.2.9

      - name: Build Application
        run: npm run build -- --configuration=production

      - name: Run Unit Tests
        run: npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: coverage/
          if-no-files-found: warn

  playwright-tests:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Root Dependencies
        run: |
          npm install
          npm install -g @angular/cli@19.2.9

      - name: Install Playwright Dependencies
        working-directory: playwright-tests
        run: |
          npm ci
          npx playwright install --with-deps chromium

      # - name: Kill any existing process on port 4200
      #   run: |
      #     sudo lsof -t -i:4200 | xargs -r sudo kill -9 || true
      #     sleep 2

      - name: Run Mock Tests
        working-directory: playwright-tests
        env:
          PLAYWRIGHT_REUSE_SERVER: "true"
        run: |
          npm run mock || {
            echo "Mock tests failed"
            exit 1
          }

      - name: Run Feature Tests
        working-directory: playwright-tests
        env:
          PLAYWRIGHT_REUSE_SERVER: "true"
          NODE_ENV: "test"
          BROWSER: "chromium"
        run: |
          echo "Running feature tests..."
          npm run feature:chrome || {
            echo "Feature tests failed"
            exit 1
          }

      - name: Generate Test Reports
        if: always()
        working-directory: playwright-tests
        run: |
          echo "Generating reports..."
          npm run open:report || true
          ls -R reports/ || true
          ls -R playwright-report/ || true

      - name: Upload All Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            playwright-tests/playwright-report/
            playwright-tests/reports/
            playwright-tests/test-results/
          if-no-files-found: warn

      - name: Upload Angular Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: angular-logs
          path: angular.log

      - name: Stop Angular App
        if: always()
        run: |
          sudo lsof -t -i:4200 | xargs -r sudo kill -9 || true
          sleep 2

  publish-report:
    needs: [build-and-test, playwright-tests]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Create Report Directory
        run: |
          mkdir -p test-results
          mkdir -p test-results/playwright
          mkdir -p test-results/cucumber

      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: downloaded-reports

      - name: Organize Reports
        run: |
          cp -r downloaded-reports/playwright-report/* test-results/playwright/ || true
          cp -r downloaded-reports/reports/* test-results/cucumber/ || true
          ls -R test-results/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create index.html
        run: |
          cat > test-results/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              .report-link {
                display: block;
                margin: 20px 0;
                padding: 15px;
                background-color: #f0f0f0;
                border-radius: 5px;
                text-decoration: none;
                color: #333;
              }
              .report-link:hover {
                background-color: #e0e0e0;
              }
            </style>
          </head>
          <body>
            <h1>Test Reports</h1>
            <a class="report-link" href="./playwright/index.html">Playwright Test Report</a>
            <a class="report-link" href="./cucumber/cucumber-html-report/index.html">Cucumber Test Report</a>
          </body>
          </html>
          EOL

      - name: Upload Reports to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: test-results

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4