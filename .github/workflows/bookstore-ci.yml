name: Bookstore WebApp CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci || npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli@19.2.9

      - name: Build Application
        run: npm run build -- --configuration=production

      - name: Run Unit Tests
        run: npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: coverage/
          if-no-files-found: warn

  playwright-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Root Dependencies
        run: |
          npm ci || npm install
          npm install -g @angular/cli@19.2.9

      - name: Install Playwright Dependencies
        working-directory: playwright-tests
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Run Mock Tests
        working-directory: playwright-tests
        env:
            PLAYWRIGHT_REUSE_SERVER: "true"
            SHARD: ${{ matrix.shard }}
            SHARD_COUNT: 2
        run: |
            mkdir -p test-results reports/cucumber reports/playwright
            npm run mock -- --shard=${{ matrix.shard }}/2 --reporter=blob,html
  
      - name: Run Feature Tests
        working-directory: playwright-tests
        env:
            SHARD: ${{ matrix.shard }}
            SHARD_COUNT: 2
        run: |
            npm run feature:shard
            npm run generate:reports
          
      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-tests/playwright-report/
          if-no-files-found: warn

      - name: Upload Cucumber Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report-${{ matrix.shard }}
          path: playwright-tests/reports/cucumber/*.json
          if-no-files-found: warn

      - name: Upload Angular Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: angular-logs-${{ matrix.shard }}
          path: angular.log


  merge-reports:
    needs: playwright-tests
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        working-directory: playwright-tests
        run: npm ci

      - name: Create Report Directories
        run: |
          mkdir -p playwright-tests/merged-reports/playwright
          mkdir -p playwright-tests/merged-reports/cucumber
          mkdir -p playwright-tests/temp-reports

      - name: Download Test Results
        uses: actions/download-artifact@v4
      - name: Download Playwright Results
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-results-*
          path: playwright-tests/temp-reports/results
          merge-multiple: true

      - name: Download Playwright Reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          path: playwright-tests/temp-reports/report
          merge-multiple: true
      - name: Download Cucumber Reports
        uses: actions/download-artifact@v4
        with:
          pattern: cucumber-report-*
          path: playwright-tests/temp-reports/cucumber
          merge-multiple: true

      - name: Debug Directory Structure
        run: |
          echo "Temp reports structure:"
          ls -R playwright-tests/temp-reports/

      - name: Merge Playwright Reports
        working-directory: playwright-tests
        run: |
          # Check for test results
          if [ -d "temp-reports/test-results" ]; then
            if [ -d "temp-reports/results/blob-report" ]; then
              echo "Found blob reports, merging..."
              npx playwright merge-reports --reporter html temp-reports/results/blob-report
              cp -r playwright-report/* merged-reports/playwright/
            elif [ -d "temp-reports/report" ]; then
              echo "No blob reports found, copying HTML report..."
              cp -r temp-reports/report/* merged-reports/playwright/
            else
              echo "No Playwright reports found"
            fi
          else
            echo "No test results directory found"
            # Fallback to copying HTML report if available
            if [ -d "temp-reports/report" ]; then
              echo "Falling back to HTML report..."
              cp -r temp-reports/report/* merged-reports/playwright/
            fi
          fi
      - name: Merge Cucumber Reports
        working-directory: playwright-tests
        run: |
          if [ -d "temp-reports/cucumber" ]; then
            mkdir -p merged-reports/cucumber
            # Copy all cucumber reports to the merged directory
            find temp-reports/cucumber -name "cucumber-report.json" -exec cp {} merged-reports/cucumber/ \;
            # Generate combined report if needed
            if [ -f "report-generator/cucumber-report.js" ]; then
              node report-generator/cucumber-report.js
            fi
          else
            echo "No cucumber reports found"
          fi

      - name: Upload Merged Reports
        uses: actions/upload-artifact@v4
        with:
          name: merged-test-reports
          path: playwright-tests/merged-reports/
          if-no-files-found: warn

  deploy-report:
    needs: merge-reports
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Merged Reports
        uses: actions/download-artifact@v4
        with:
          name: merged-test-reports
          path: test-results

      - name: Create index.html
        run: |
          cat > test-results/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; }
              h1 { color: #333; }
              .report-section { margin: 20px 0; }
              .report-link {
                display: inline-block;
                padding: 10px 20px;
                background: #007bff;
                color: white;
                text-decoration: none;
                border-radius: 5px;
                margin: 10px 0;
              }
              .report-link:hover {
                background: #0056b3;
              }
            </style>
          </head>
          <body>
            <h1>Test Reports</h1>
            <div class="report-section">
              <h2>Playwright Tests Report</h2>
              <a class="report-link" href="./playwright/index.html">View Playwright Report</a>
            </div>
            <div class="report-section">
              <h2>Cucumber Tests Report</h2>
              <a class="report-link" href="./cucumber/index.html">View Cucumber Report</a>
            </div>
          </body>
          </html>
          EOL

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: test-results

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4