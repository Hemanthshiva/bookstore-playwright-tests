name: Bookstore WebApp CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install
          npx playwright install
          npx playwright install-deps

      # Build the application
      - name: Build Application
        run: npm run build

      # Run unit tests
      - name: Run Unit Tests
        run: npm run test

      - name: Check Coverage Directory
        run: |
          if [ ! -d "coverage" ]; then
            echo "Coverage directory not found! Skipping upload."
            exit 1
          fi
      
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: coverage/
          if-no-files-found: warn

  playwright-tests:
    needs: build-and-test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        shard: [1/3, 2/3, 3/3]

    steps:
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install
          npx playwright install
          npx playwright install-deps

      # Run Playwright tests in parallel
      - name: Run Playwright tests
        run: npx playwright test --shard ${{ matrix.shard }}

      # Run Cucumber feature files
      - name: Run Feature Tests
        run: npm run cucumber

      - name: Check Playwright Report Directory
        run: |
          if [ ! -d "playwright-report" ] || [ ! -d "test-results" ]; then
            echo "Playwright report or test results directory not found! Skipping upload."
            exit 1
          fi
      
      - name: Upload Playwright Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results-${{ matrix.os }}-${{ matrix.shard }}
          path: |
            playwright-report/
            test-results/
          if-no-files-found: warn
  
  publish-test-report:
    needs: [build-and-test, playwright-tests]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - uses: actions/checkout@v3

      # Download all artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      # Generate and publish combined test report
      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Test Results
          path: "**/*.xml"
          reporter: "java-junit"
          fail-on-error: false

      # Optional: Upload combined report as artifact
      - name: Upload Combined Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: combined-test-report
          path: test-report/
          if-no-files-found: warn