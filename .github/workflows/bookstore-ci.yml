name: Bookstore WebApp CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clean npm cache and remove lock files
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json

      - name: Install Dependencies
        run: |
          npm install
          npm install -g @angular/cli@19.2.9
          npm install @rollup/rollup-linux-x64-gnu

      - name: Build Application
        run: npm run build -- --configuration=production

      - name: Run Unit Tests
        run: npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: coverage/
          if-no-files-found: warn

  playwright-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clean npm cache and remove lock files
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          cd playwright-tests
          rm -rf node_modules package-lock.json

      - name: Install Root Dependencies
        run: |
          npm install
          npm install -g @angular/cli@19.2.9
          npm install @rollup/rollup-linux-x64-gnu

      - name: Install Playwright Dependencies
        working-directory: playwright-tests
        run: |
          npm install
          npx playwright install --with-deps chromium
          npm install -g @playwright/test

      # - name: Start Angular Server
      #   run: |
      #     npm run start &
      #     sleep 30

      - name: Run All Tests
        working-directory: playwright-tests
        env:
          PLAYWRIGHT_REUSE_SERVER: "true"
        run: |
          # Create reports directory
          mkdir -p reports/cucumber
          mkdir -p reports/playwright
          
          # Run tests using npm scripts
          npm run test:all

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-tests/playwright-report/
          if-no-files-found: warn

      - name: Upload Cucumber Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: playwright-tests/reports/cucumber/*.json
          if-no-files-found: warn

  deploy-reports:
    needs: playwright-tests
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Playwright Report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: test-reports/playwright

      - name: Download Cucumber Report
        uses: actions/download-artifact@v4
        with:
          name: cucumber-report
          path: test-reports/cucumber

      - name: Generate Cucumber HTML Report
        run: |
          # Install cucumber-html-reporter
          npm install cucumber-html-reporter
          
          # Create a Node.js script to generate HTML report
          cat > generate-report.js << 'EOL'
          const reporter = require('cucumber-html-reporter');
          
          const options = {
            theme: 'bootstrap',
            jsonFile: 'test-reports/cucumber/*.json',
            output: 'test-reports/cucumber/index.html',
            reportSuiteAsScenarios: true,
            scenarioTimestamp: true,
            launchReport: false
          };
          
          reporter.generate(options);
          EOL
          
          # Run the script
          node generate-report.js

      - name: Create index.html
        run: |
          cat > test-reports/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Reports</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      margin: 0;
                      padding: 20px;
                      background-color: #f5f5f5;
                  }
                  .container {
                      max-width: 800px;
                      margin: 0 auto;
                      background-color: white;
                      padding: 20px;
                      border-radius: 8px;
                      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                  }
                  h1 {
                      color: #333;
                      text-align: center;
                      margin-bottom: 30px;
                  }
                  .report-section {
                      margin: 20px 0;
                      padding: 20px;
                      border: 1px solid #ddd;
                      border-radius: 4px;
                  }
                  .report-link {
                      display: block;
                      padding: 15px 20px;
                      background: #007bff;
                      color: white;
                      text-decoration: none;
                      border-radius: 5px;
                      text-align: center;
                      margin: 10px 0;
                      transition: background-color 0.3s;
                  }
                  .report-link:hover {
                      background: #0056b3;
                  }
                  h2 {
                      color: #444;
                      margin-bottom: 15px;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Test Reports</h1>
                  <div class="report-section">
                      <h2>Playwright Tests Report</h2>
                      <a class="report-link" href="./playwright/index.html">View Playwright Report</a>
                  </div>
                  <div class="report-section">
                      <h2>Cucumber Tests Report</h2>
                      <a class="report-link" href="./cucumber/index.html">View Cucumber Report</a>
                  </div>
              </div>
          </body>
          </html>
          EOL

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: test-reports

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4